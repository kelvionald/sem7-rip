# This is a basic workflow to help you get started with Actions

name: C1I

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DEPLOY_PATH: /home/c/cv19731/evilengine.ru
  # В теории можно собрать не только Vue-приложение, так как принцип сборки мало где отличается
  BUILD_SCRIPT: npm run prod
  BUILD_SCRIPT_OUTPUT: public_html

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Шаги представляют собой последовательность задач, которые будут выполняться как часть задания.
    steps:
      # Делаем checkout текущей ветки
      - uses: actions/checkout@v2
      
#       # Устанавливаем Node.JS для сборки приложения
#       - uses: actions/setup-node@v1
#         with:
#           node-version: '14'
          
#       # Устанавливаем зависимости для сборки
#       - name: Install Dependencies
#         run: npm i
        
#       # Собираем приложение
#       - name: Build Appliction
#         run: $BUILD_SCRIPT

      - name: Архивируем папку
        run: zip -r tmp.zip ./*
    
      - name: Содержимое
        run: ls

      - name: Конфиг SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$DEPLOY_SERVER_HOST" > ~/.ssh/id_rsa
          echo "$DEPLOY_SERVER_HOST" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $DEPLOY_SERVER_HOST
            User $DEPLOY_SERVER_USERNAME
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          DEPLOY_SERVER_USERNAME: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          DEPLOY_SERVER_KEY: ${{ secrets.DEPLOY_SERVER_KEY }}
          DEPLOY_SERVER_HOST: ${{ secrets.DEPLOY_SERVER_HOST }}
     
#       - name: Содержимое
#         run: cat ~/.ssh/config

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_SERVER_KEY }} 
        
      - name: Содержимое
        run: cat ~/.ssh/staging.key
        
      - name: Отправляем
        run: rsync ./tmp.zip ${{ secrets.DEPLOY_SERVER_USERNAME }}@${{ secrets.DEPLOY_SERVER_HOST }}:/home/c/cv19731/evilengine.ru
        
#         run: scp ./tmp.zip ${{ secrets.DEPLOY_SERVER_USERNAME }}@${{ secrets.DEPLOY_SERVER_HOST }}:/home/c/cv19731/evilengine.ru # -F ~/.ssh/staging.key
        
#       # Доставляем собранное приложение на сервер
#       - name: Deploy to Server
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.DEPLOY_SERVER_HOST }}
#           port: ${{ secrets.DEPLOY_SERVER_PORT }}
#           username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
#           key: ${{ secrets.DEPLOY_SERVER_KEY }}
#           source: "./*.*,!vendor,!node_modules"
#           target: ${{ env.DEPLOY_PATH }}
#           strip_components: 1
          
#       - name: Print Info
#         run: echo "Deployed at http://evilengine.ru/"
